@using System.Security.Claims
@model Domain.ViewModel.BlogDetailViewModel

@{
    ViewData["Title"] = "Details";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">


 <div class="mx-auto rounded-md mt-12  mb-8">
            <h1 class="text-3xl font-bold mb-4">@Model.Blog.BlogTitle</h1>
           
            @if (!string.IsNullOrEmpty(Model.Blog.ImageName))
            {
                <img src="~/Images/Blogs/@Model.Blog.ImageName" alt="Blog Post Image" class="mb-4 h-auto mx-auto w-full rounded-lg object-cover" style="height: 50vh;">
            }

            <!-- Reaction Buttons -->
    
            <div class="flex items-center space-x-4 mb-4 ms-3">
        <form asp-controller="Blog" asp-action="UpvoteLike" method="post" class="like-button-form">
            <input value="@User.FindFirstValue(ClaimTypes.NameIdentifier)?.ToString()" name="User" hidden />
            <input value="@Model.Blog.Id" name="Blog" hidden />
            <button id="upvoteBtn" class="bg-green-100 text-green-700 px-4 py-2 rounded-md hover:text-white hover:bg-green-600">Upvote <span> @Html.DisplayFor(modelItem => Model.Blog.LikeCount)</span></button>

        </form>
        <form asp-controller="Blog" asp-action="DownvoteLike" method="post" class="like-button-form">
            <input value="@User.FindFirstValue(ClaimTypes.NameIdentifier)?.ToString()" name="User" hidden />
            <input value="@Model.Blog.Id" name="Blog" hidden />
            <button id="downvoteBtn" class="bg-red-100 text-red-700 px-4 py-2 rounded-md hover:text-white hover:bg-red-600">Downvote <span> @Html.DisplayFor(modelItem => Model.Blog.DislikeCount)</span></button>
        </form>
               
               
            </div>
            <div class="mx-auto ms-3 container container-fluid">
                <b>Content</b>
                 <p class="text-gray-700 mb-4 ">@Model.Blog.BlogContent</p>
            </div>

        </div>

        <!-- Comments Section -->
        <div class="mx-auto bg-white p-6 rounded-md shadow-md">
            <h2 class="text-2xl font-bold mb-4">Comments</h2>
            <!-- Single Comment -->
    @if (Model.Comments != null && Model.Comments.Any())
    {
        foreach (var comment in Model.Comments)
        {
            <div class="bg-gray-200 rounded-md p-4 mb-4">
                <p class="text-gray-700">@comment.Content</p>
                <div>
                    <div class="d-inline-flex">
                        <form asp-controller="Blog" asp-action="UpvoteCommentLike" method="post" class="like-button-form">
                            <input value="@User.FindFirstValue(ClaimTypes.NameIdentifier)?.ToString()" name="User" hidden />
                            <input value="@comment.Id" name="Comment" hidden />
                            <input value="@Model.Blog.Id" name="blogId" hidden />
                            <button class="btn btn-link text-success">
                                <i class="bi bi-hand-thumbs-up"></i> @comment.LikeCount
                            </button>
                        </form>
                        <!-- Dislike icon -->
                        <form asp-controller="Blog" asp-action="DownvoteCommentLike" method="post" class="like-button-form ml-2">
                            <input value="@User.FindFirstValue(ClaimTypes.NameIdentifier)?.ToString()" name="User" hidden />
                            <input value="@comment.Id" name="Comment" hidden />
                            <input value="@Model.Blog.Id" name="blogId" hidden />
                            <button class="btn btn-link text-danger">
                                <i class="bi bi-hand-thumbs-down"></i> @comment.DislikeCount
                            </button>
                        </form>
                    </div>

                    <!-- Check if the comment user is the current user -->
                    @if (User.Identity.IsAuthenticated && comment.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier))
                    {
                        <!-- Edit link -->
                        <a href="#" class="btn btn-link text-info">
                            <i class="bi bi-pencil-square"></i> Edit
                        </a>
                        <a href="#" class="btn btn-link text-danger">
                            <i class="bi bi-pencil-square"></i> Delete
                        </a>
                    }
                </div>
            </div>
        }
    }

            else
    {
            <div class="bg-gray-200 rounded-md p-4 mb-4">
                <p>No comments yet.</p>
            </div>
            }
            <!-- Add Comment Form -->
    <form asp-controller="Blog" asp-action="CreateComment" method="post">
        <input type="hidden" name="BlogId" value="@Model.Blog.Id" />
        <input type="hidden" name="UserId" value="@User.FindFirstValue(ClaimTypes.NameIdentifier)?.ToString()" />
        <div class="mb-4">
            <label for="comment" class="block text-gray-700 font-bold mb-2">Add a Comment</label>
            <textarea id="comment" name="content" rows="3" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:border-blue-500" placeholder="Write your comment here"></textarea>
        </div>
        <button class="bg-blue-700 text-white px-4 py-2 rounded-md hover:bg-blue-600">Post Comment</button>
    </form>


        </div>
